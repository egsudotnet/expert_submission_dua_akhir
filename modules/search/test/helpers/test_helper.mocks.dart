// Mocks generated by Mockito 5.3.0 from annotations
// in search/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:core/utils/failure.dart' as _i7;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie/data/datasource/movie_local_data_source.dart' as _i19;
import 'package:movie/data/datasource/movie_remote_data_source.dart' as _i17;
import 'package:movie/data/models/movie_detail_model.dart' as _i4;
import 'package:movie/data/models/movie_model.dart' as _i18;
import 'package:movie/data/models/movie_table.dart' as _i20;
import 'package:movie/domain/entities/movie.dart' as _i15;
import 'package:movie/domain/entities/movie_detail.dart' as _i16;
import 'package:movie/domain/repositories/movie_repository.dart' as _i14;
import 'package:tv/data/datasource/tv_remote_data_source.dart'
    as _i11;
import 'package:tv/data/models/episode_model.dart' as _i13;
import 'package:tv/data/models/tv_detail_model.dart' as _i3;
import 'package:tv/data/models/tv_model.dart' as _i12;
import 'package:tv/domain/entities/episode.dart' as _i10;
import 'package:tv/domain/entities/tv.dart' as _i8;
import 'package:tv/domain/entities/tv_detail.dart' as _i9;
import 'package:tv/domain/repositories/tv_repository.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvDetailModel_1 extends _i1.SmartFake
    implements _i3.TvDetailModel {
  _FakeTvDetailModel_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_2 extends _i1.SmartFake
    implements _i4.MovieDetailResponse {
  _FakeMovieDetailResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock
    implements _i5.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>
      getNowPlayingTv() => (super.noSuchMethod(
              Invocation.method(#getNowPlayingTv, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                          this, Invocation.method(#getNowPlayingTv, []))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>
      getPopularTv() => (super.noSuchMethod(
              Invocation.method(#getPopularTv, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                          this, Invocation.method(#getPopularTv, []))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>
      getTopRatedTv() => (super.noSuchMethod(
              Invocation.method(#getTopRatedTv, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                          this, Invocation.method(#getTopRatedTv, []))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i9.TvDetail>> getTvDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, _i9.TvDetail>>.value(
                      _FakeEither_0<_i7.Failure, _i9.TvDetail>(
                          this, Invocation.method(#getTvDetail, [id]))))
          as _i6.Future<_i2.Either<_i7.Failure, _i9.TvDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>
      getTvRecommended(int? id) => (super.noSuchMethod(
              Invocation.method(#getTvRecommended, [id]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.Tv>>(this,
                          Invocation.method(#getTvRecommended, [id]))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i10.Episode>>> getTvEpisode(
          int? id, int? season) =>
      (super.noSuchMethod(Invocation.method(#getTvEpisode, [id, season]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i10.Episode>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i10.Episode>>(this,
                          Invocation.method(#getTvEpisode, [id, season]))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i10.Episode>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>> searchTv(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTv, [query]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                          this, Invocation.method(#searchTv, [query]))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i11.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i12.TvModel>> getPopularTv() =>
      (super.noSuchMethod(Invocation.method(#getPopularTv, []),
          returnValue: _i6.Future<List<_i12.TvModel>>.value(
              <_i12.TvModel>[])) as _i6.Future<List<_i12.TvModel>>);
  @override
  _i6.Future<List<_i12.TvModel>> getNowPlayingTv() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTv, []),
          returnValue: _i6.Future<List<_i12.TvModel>>.value(
              <_i12.TvModel>[])) as _i6.Future<List<_i12.TvModel>>);
  @override
  _i6.Future<_i3.TvDetailModel> getDetailTv(int? id) =>
      (super.noSuchMethod(Invocation.method(#getDetailTv, [id]),
              returnValue: _i6.Future<_i3.TvDetailModel>.value(
                  _FakeTvDetailModel_1(
                      this, Invocation.method(#getDetailTv, [id]))))
          as _i6.Future<_i3.TvDetailModel>);
  @override
  _i6.Future<List<_i12.TvModel>> getTopRatedTv() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTv, []),
          returnValue: _i6.Future<List<_i12.TvModel>>.value(
              <_i12.TvModel>[])) as _i6.Future<List<_i12.TvModel>>);
  @override
  _i6.Future<List<_i12.TvModel>> getRecommendationTv(int? id) =>
      (super.noSuchMethod(Invocation.method(#getRecommendationTv, [id]),
          returnValue: _i6.Future<List<_i12.TvModel>>.value(
              <_i12.TvModel>[])) as _i6.Future<List<_i12.TvModel>>);
  @override
  _i6.Future<List<_i12.TvModel>> searchTv(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTv, [query]),
          returnValue: _i6.Future<List<_i12.TvModel>>.value(
              <_i12.TvModel>[])) as _i6.Future<List<_i12.TvModel>>);
  @override
  _i6.Future<List<_i13.EpisodeModel>> getTvEpisode(
          int? id, int? season) =>
      (super.noSuchMethod(Invocation.method(#getTvEpisode, [id, season]),
          returnValue: _i6.Future<List<_i13.EpisodeModel>>.value(
              <_i13.EpisodeModel>[])) as _i6.Future<List<_i13.EpisodeModel>>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i14.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i15.Movie>>(
                          this, Invocation.method(#getNowPlayingMovies, []))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i15.Movie>>(
                          this, Invocation.method(#getPopularMovies, []))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i15.Movie>>(
                          this, Invocation.method(#getTopRatedMovies, []))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i16.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, _i16.MovieDetail>>.value(
                      _FakeEither_0<_i7.Failure, _i16.MovieDetail>(
                          this, Invocation.method(#getMovieDetail, [id]))))
          as _i6.Future<_i2.Either<_i7.Failure, _i16.MovieDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i15.Movie>>(this,
                          Invocation.method(#getMovieRecommendations, [id]))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i15.Movie>>(
                          this, Invocation.method(#searchMovies, [query]))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i15.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(
          _i15.Movie? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [movie]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [id]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [id]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<dynamic>>> getWatchlist() =>
      (super.noSuchMethod(Invocation.method(#getWatchlist, []),
          returnValue: _i6.Future<_i2.Either<_i7.Failure, List<dynamic>>>.value(
              _FakeEither_0<_i7.Failure, List<dynamic>>(
                  this, Invocation.method(#getWatchlist, [])))) as _i6
          .Future<_i2.Either<_i7.Failure, List<dynamic>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i17.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i18.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  _i6.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]))
          as _i6.Future<List<_i18.MovieModel>>);
  @override
  _i6.Future<List<_i18.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
              returnValue:
                  _i6.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]))
          as _i6.Future<List<_i18.MovieModel>>);
  @override
  _i6.Future<List<_i18.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
              returnValue:
                  _i6.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]))
          as _i6.Future<List<_i18.MovieModel>>);
  @override
  _i6.Future<_i4.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue: _i6.Future<_i4.MovieDetailResponse>.value(
                  _FakeMovieDetailResponse_2(
                      this, Invocation.method(#getMovieDetail, [id]))))
          as _i6.Future<_i4.MovieDetailResponse>);
  @override
  _i6.Future<List<_i18.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  _i6.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]))
          as _i6.Future<List<_i18.MovieModel>>);
  @override
  _i6.Future<List<_i18.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  _i6.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]))
          as _i6.Future<List<_i18.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i19.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i20.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [id]),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i20.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i6.Future<_i20.MovieTable?>.value())
          as _i6.Future<_i20.MovieTable?>);
  @override
  _i6.Future<List<dynamic>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: _i6.Future<List<dynamic>>.value(<dynamic>[]))
          as _i6.Future<List<dynamic>>);
}
